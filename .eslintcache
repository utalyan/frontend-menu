[{"C:\\proje\\react\\frontend\\menu-prime\\src\\index.js":"1","C:\\proje\\react\\frontend\\menu-prime\\src\\App.js":"2","C:\\proje\\react\\frontend\\menu-prime\\src\\design\\Topbar.js":"3","C:\\proje\\react\\frontend\\menu-prime\\src\\signup\\Signup.js":"4","C:\\proje\\react\\frontend\\menu-prime\\src\\signup\\Login.js":"5","C:\\proje\\react\\frontend\\menu-prime\\src\\design\\Homepage.js":"6","C:\\proje\\react\\frontend\\menu-prime\\src\\shared\\Api.js":"7","C:\\proje\\react\\frontend\\menu-prime\\src\\context\\AuthContextProvider.js":"8","C:\\proje\\react\\frontend\\menu-prime\\src\\context\\AuthReducer.js":"9","C:\\proje\\react\\frontend\\menu-prime\\src\\signup\\Logout.js":"10","C:\\proje\\react\\frontend\\menu-prime\\src\\repast\\RepastView.js":"11"},{"size":522,"mtime":1610971458987,"results":"12","hashOfConfig":"13"},{"size":738,"mtime":1611001533517,"results":"14","hashOfConfig":"13"},{"size":3677,"mtime":1611001542768,"results":"15","hashOfConfig":"13"},{"size":8123,"mtime":1610975652911,"results":"16","hashOfConfig":"13"},{"size":2824,"mtime":1610992827760,"results":"17","hashOfConfig":"13"},{"size":589,"mtime":1610993508316,"results":"18","hashOfConfig":"13"},{"size":1058,"mtime":1611181196514,"results":"19","hashOfConfig":"13"},{"size":720,"mtime":1610660920670,"results":"20","hashOfConfig":"13"},{"size":375,"mtime":1610653162615,"results":"21","hashOfConfig":"13"},{"size":599,"mtime":1610992379127,"results":"22","hashOfConfig":"13"},{"size":6033,"mtime":1611251329662,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1k0sjae",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\proje\\react\\frontend\\menu-prime\\src\\index.js",[],["51","52"],"C:\\proje\\react\\frontend\\menu-prime\\src\\App.js",[],"C:\\proje\\react\\frontend\\menu-prime\\src\\design\\Topbar.js",["53","54","55","56"],"import React from 'react'\r\nimport { Menubar } from 'primereact/menubar';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Link } from 'react-router-dom';\r\nimport  logoDefault from \"../assets/img/logo.jpg\" ;\r\nimport { AuthContext } from '../context/AuthContextProvider';\r\n\r\n\r\nexport const Topbar = () => {\r\n\r\n    const {user} = React.useContext(AuthContext);\r\n\r\n    const {isLogged,username,firmName,logo} = user;\r\n    let logoCurrent = logo;\r\n\r\n\r\n    if (!logo)\r\n    {\r\n        logoCurrent = logoDefault;\r\n    }\r\n    let retValue ;\r\n\r\n\r\n    const items = [\r\n        {\r\n            label: 'İşlemler',\r\n            icon: 'pi pi-fw pi-user',\r\n            items: [\r\n                {\r\n                    label: 'Üye Ol',\r\n                    icon: 'pi pi-fw pi-user-plus',\r\n                    command: (event) => {\r\n                        window.location.hash = \"/signup\";\r\n                    }\r\n\r\n                },\r\n                {\r\n                    label: 'Giriş',\r\n                    icon: 'pi pi-fw pi-user-minus',\r\n                    command: (event) => {\r\n                        window.location.hash = \"/login\";\r\n                    }\r\n\r\n                }\r\n            ]\r\n        }\r\n    ];\r\n\r\n    const itemsLogged = [\r\n        {\r\n            label: 'İşlemler',\r\n            icon: 'pi pi-fw pi-user',\r\n            items: [\r\n                {\r\n                    label: 'Öğün Tanım',\r\n                    icon: 'pi pi-fw pi-user-plus',\r\n                    command: (event) => {\r\n                        window.location.hash = \"/repast\";\r\n                    }\r\n\r\n                },\r\n                {\r\n                    label: 'Tür Tanım',\r\n                    icon: 'pi pi-fw pi-user-minus',\r\n                    command: (event) => {\r\n                        window.location.hash = \"/login\";\r\n                    }\r\n\r\n                },\r\n                {\r\n                    label: 'Porsiyon Tanım',\r\n                    icon: 'pi pi-fw pi-user-minus',\r\n                    command: (event) => {\r\n                        window.location.hash = \"/login\";\r\n                    }\r\n\r\n                },\r\n                {\r\n                    label: 'İsteğe Bağlı Ek Tanım',\r\n                    icon: 'pi pi-fw pi-user-minus',\r\n                    command: (event) => {\r\n                        window.location.hash = \"/login\";\r\n                    }\r\n\r\n                },\r\n                {\r\n                    label: 'Yemek Tanım',\r\n                    icon: 'pi pi-fw pi-user-minus',\r\n                    command: (event) => {\r\n                        window.location.hash = \"/login\";\r\n                    }\r\n\r\n                },\r\n                {\r\n                    label: 'Menü Tanım',\r\n                    icon: 'pi pi-fw pi-user-minus',\r\n                    command: (event) => {\r\n                        window.location.hash = \"/login\";\r\n                    }\r\n\r\n                }\r\n\r\n\r\n            ]\r\n        },\r\n        {\r\n            label: 'Çıkış',\r\n            icon: 'pi pi-fw pi-power-off',\r\n            command: (event) => {\r\n                window.location.hash = \"/signout\";\r\n            }\r\n        }\r\n    ];\r\n\r\n    const start = <img alt=\"logo\" src={logoCurrent} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} height=\"50\" className=\"p-mr-2\"></img>;\r\n    const end = <InputText placeholder=\"Search\" type=\"text\" />;\r\n\r\n    return (\r\n        <div>\r\n            \r\n            <div className=\"card\">\r\n                <Menubar model={isLogged?itemsLogged:items} start={start} end={end}   />\r\n            </div>\r\n        </div>\r\n\r\n        \r\n    );\r\n}\r\n","C:\\proje\\react\\frontend\\menu-prime\\src\\signup\\Signup.js",["57","58","59"],"import { InputText } from 'primereact/inputtext'\r\nimport React from 'react'\r\nimport { firmCreate, getCity, getCounty } from '../shared/Api'\r\nimport {Dropdown} from 'primereact/dropdown';\r\nimport {InputTextarea} from 'primereact/inputtextarea';\r\nimport {Password} from 'primereact/password';\r\nimport { Button } from 'primereact/button';\r\nimport { InputMask } from 'primereact/inputmask';\r\n\r\nexport const Signup = (props) => {\r\n    const [city,setCity]  = React.useState([])\r\n    const [county,setCounty] = React.useState([])\r\n    const [status,setStatus] = React.useState(false)\r\n    const initialize = {name:null,email:null,password:null,responsibleName:null,telephone:null,address:null,cityId:null,countyId:null}\r\n    const [firm,setFirm] = React.useState(initialize);\r\n    const [error,setError] = React.useState({})\r\n    const [errorFound,seterrorFound] = React.useState(false)\r\n    const [selectedFile,setSelectedFile] = React.useState(null);\r\n    const [selectedCityId,setSelectedCityId] = React.useState(null);\r\n    const [selectedCountyId,setSelectedCountyId] = React.useState(null);\r\n\r\n    React.useEffect(() => {\r\n\r\n        const getCityFromApi= async ()=>\r\n        {\r\n            setStatus(true);\r\n            try {\r\n                const response =await getCity();\r\n                \r\n                setCity(response.data);\r\n    \r\n            } catch (error) {\r\n               \r\n            }\r\n            setStatus(false);\r\n        }\r\n        getCityFromApi();\r\n\r\n    }, [])\r\n\r\n    const getCountyByCityId = async (cityId) => {\r\n        setStatus(true);\r\n        try {\r\n            \r\n            const response = await getCounty(cityId);\r\n\r\n            setCounty(response.data);\r\n\r\n        } catch (error) {\r\n            \r\n        }\r\n        setStatus(false);\r\n    }\r\n    const onChangeSelectedCity = (e) => {\r\n\r\n        const {id:cityId,name} = e.target.value;\r\n\r\n        delete error[name]\r\n\r\n        let dd = Object.keys(error).length === 0 && error.constructor === Object\r\n        if (dd) seterrorFound(false)\r\n\r\n\r\n        /*setError((prevError) => ({...prevError,[e.target.name]:undefined}))*/\r\n        setFirm((prevFirm) => ({...prevFirm,cityId:e.target.value.id}))\r\n        setFirm((prevFirm) => ({...prevFirm,countyId:0}))\r\n\r\n        setSelectedCityId(e.value)\r\n        getCountyByCityId(cityId);\r\n\r\n    }\r\n\r\n    const onChangeSelectedCounty = (e) =>{\r\n        const {id:countyId,name} = e.target.value;\r\n        setFirm({...firm,countyId});\r\n        setSelectedCountyId(e.value)\r\n    }\r\n    const onChangeForm = e => {\r\n        const {name,value} = e.target;\r\n        delete error[e.target.name]\r\n\r\n        let dd = Object.keys(error).length === 0 && error.constructor === Object\r\n        if (dd) seterrorFound(false)\r\n\r\n        setFirm({...firm,[name]:value})\r\n    }\r\n\r\n    const onHandleSubmit = async (e) =>{\r\n\r\n        setStatus(true);\r\n        try {\r\n\r\n            if (selectedFile)\r\n            {\r\n                const logo = selectedFile.split(\",\")[1]\r\n                setFirm({...firm,logo})\r\n\r\n            }\r\n\r\n            await firmCreate(firm)\r\n\r\n            props.history.push({pathname:\"/login\",username:firm.email})\r\n\r\n        } catch (error) {\r\n\r\n            setError(error.response.data.validationErrors)\r\n            seterrorFound(true);\r\n            \r\n        }\r\n        setStatus(false);\r\n    }\r\n\r\n    const onFileChange = (e) =>{\r\n        const selectedFile = e.target.files[0]\r\n\r\n        if (selectedFile)\r\n        {\r\n            const fileReader = new FileReader();\r\n\r\n            fileReader.onloadend = () =>{\r\n                setSelectedFile(fileReader.result);\r\n            }\r\n\r\n            fileReader.readAsDataURL(selectedFile);\r\n        } else {\r\n            setSelectedFile(null);\r\n        }\r\n        \r\n    }\r\n    const {name,email,password,telephone,responsibleName, address} = firm;\r\n    const {name:error_name,email:error_email,cityId,countyId,address:error_address,telephone:error_telephone,responsibleName:error_responsibleName,password:error_password} = error;\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"p-fluid p-grid\">\r\n                <div className=\"p-col-10 p-offset-1 p-md-6 p-md-offset-3 p-shadow-1 p-my-3\">\r\n                    <div className=\"p-formgrid p-grid \">\r\n                        <div className=\"p-md-2 p-md-offset-5 p-py-0\" >\r\n                            <span style={{fontSize:\"22px\"}}>Firma Tanım</span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 \">\r\n                            <label htmlFor=\"firmname\" >Adı</label>\r\n                            <InputText id=\"firmname\"  type=\"text\" name = \"name\" value={name} onChange={onChangeForm} className={error_name?\"p-inputtext-sm p-invalid\":\"p-inputtext-sm\"}/>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-6\">\r\n                            <label htmlFor=\"email\">E-mail</label>\r\n                            <InputText id=\"email\" type=\"text\" name = \"email\" value={email} onChange={onChangeForm} className={error_email?\"p-inputtext-sm p-invalid\":\"p-inputtext-sm\"}/>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-6\">\r\n                            <label htmlFor=\"password\">Şifre</label>\r\n                            <Password id=\"password\" type=\"text\" name = \"password\" value={password} onChange={onChangeForm} className={error_password?\"p-inputtext-sm p-invalid\":\"p-inputtext-sm\"}/>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-6\">\r\n                            <label htmlFor=\"yetkili\">Yetkili</label>\r\n                            <InputText id=\"yetkili\" type=\"text\" name = \"responsibleName\" value={responsibleName} onChange={onChangeForm} className={error_responsibleName?\"p-inputtext-sm p-invalid\":\"p-inputtext-sm\"}/>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-6\">\r\n                            <label htmlFor=\"telefon\">Telefon</label>\r\n                            <InputMask id=\"telefon\" type=\"text\" mask=\"(999) 999-9999\" name = \"telephone\" value={telephone} onChange={onChangeForm} className={error_telephone?\"p-inputtext-sm p-invalid\":\"p-inputtext-sm\"}/>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12\">\r\n                            <label htmlFor=\"address\">Adres</label>\r\n                            <InputTextarea id=\"address\" type=\"text\" rows=\"2\" name = \"address\" value={address} onChange={onChangeForm} className={error_address?\"p-inputtext-sm p-invalid\":\"p-inputtext-sm\"}/>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-6\">\r\n                            <label htmlFor=\"city\">City</label>\r\n                            <Dropdown inputId=\"city\" value={selectedCityId} options={city} onChange={onChangeSelectedCity} placeholder=\"Select\" optionLabel=\"name\" className={cityId?\"p-inputtext-sm p-invalid\":\"p-inputtext-sm\"}/>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-6\">\r\n                            <label htmlFor=\"county\">İlçe</label>\r\n                            <Dropdown inputId=\"county\" value={selectedCountyId} options={county} onChange={onChangeSelectedCounty} placeholder=\"Select\" optionLabel=\"name\" className={countyId?\"p-inputtext-sm p-invalid\":\"p-inputtext-sm\"}/>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-6\">\r\n                            <input type=\"file\" className =\"ml-3\" onChange={onFileChange}/>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-6\">\r\n                            <img src={selectedFile} alt=\"logo\" height=\"50px\"/>\r\n                        </div>\r\n                        <div className=\"p-col-12 p-md-3\">\r\n                            <Button label=\"Kaydet\" className=\"p-button-primary p-button-sm\" onClick={onHandleSubmit} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\proje\\react\\frontend\\menu-prime\\src\\signup\\Login.js",["60","61"],"import React from 'react'\r\nimport { login } from '../shared/Api';\r\nimport { AuthContext } from '../context/AuthContextProvider';\r\nimport { InputText } from 'primereact/inputtext'\r\nimport { Button } from 'primereact/button';\r\n\r\nexport const Login = (props) => {\r\n\r\n    const init = {username:null,password:null};\r\n    const [creds,setCreds] = React.useState(init);\r\n    const [error,setError] = React.useState();\r\n    const {dispatchUser} = React.useContext(AuthContext);\r\n    const [status,setStatus] = React.useState(false)\r\n\r\n\r\n    const onChangeForm = e =>{\r\n        setError(null);\r\n\r\n        const {name,value} = e.target;\r\n\r\n        setCreds({...creds,[name]:value});\r\n    }\r\n\r\n\r\n    const onClickLogin = async (e) =>{\r\n        e.preventDefault()\r\n\r\n        setStatus(true);\r\n\r\n        try {\r\n\r\n            const response = await login(creds);\r\n            const {token,userVM} = response.data;\r\n            const {username,surname,telephone,firmName,logo} = userVM;\r\n\r\n            dispatchUser({type:'LOGIN_UPDATE',payload:{isLogged:true,token,username,surname,telephone,firmName,logo}})\r\n\r\n            props.history.push(\"/\")\r\n\r\n            \r\n        } catch (error) {\r\n            const {status,message} = error.response.data;\r\n\r\n            setError(status + \" \" + message);            \r\n        }\r\n\r\n        setStatus(false);\r\n\r\n    }\r\n    const {username,password} = creds;\r\n\r\n    const disabled = username && password;\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"p-fluid p-grid\">\r\n                <div className=\"p-col-10 p-offset-1 p-md-4 p-md-offset-4 p-shadow-1 p-my-3\">\r\n                    <div className=\"p-formgrid p-grid \">\r\n                        <div className=\"p-md-4 p-md-offset-4 p-py-0\" >\r\n                            <span style={{fontSize:\"22px\"}}>Kullanıcı Giriş</span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 \">\r\n                            <label htmlFor=\"firmname\" >Adı</label>\r\n                            <InputText id=\"firmname\"  type=\"text\" name = \"username\" value={username}  onChange={onChangeForm} className=\"p-inputtext-sm\"/>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <label htmlFor=\"email\">Şifre</label>\r\n                            <InputText id=\"email\" type=\"password\" name = \"password\" value={password} onChange={onChangeForm} className=\"p-inputtext-sm\"/>\r\n                        </div>\r\n                        <div className=\"p-col-12 p-md-3\">\r\n                            <Button label=\"Kaydet\" className=\"p-button-primary p-button-sm\" disabled={!disabled} onClick={onClickLogin} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n","C:\\proje\\react\\frontend\\menu-prime\\src\\design\\Homepage.js",[],"C:\\proje\\react\\frontend\\menu-prime\\src\\shared\\Api.js",[],"C:\\proje\\react\\frontend\\menu-prime\\src\\context\\AuthContextProvider.js",[],"C:\\proje\\react\\frontend\\menu-prime\\src\\context\\AuthReducer.js",[],"C:\\proje\\react\\frontend\\menu-prime\\src\\signup\\Logout.js",["62"],"import React, { useEffect } from 'react'\r\nimport { AuthContext } from '../context/AuthContextProvider'\r\n\r\nexport const Logout = () => {\r\n\r\n    const {dispatchUser} = React.useContext(AuthContext)\r\n\r\n    useEffect(() => {\r\n\r\n        dispatchUser({type:'LOGIN_UPDATE',payload:{isLogged:false,token:null,username:null,surname:null,telephone:null,firmName:null,logo:null}})\r\n    \r\n    }, [])\r\n    \r\n    return (\r\n        <div>\r\n            <div style={{position:'absolute',left:'50%',right:'50%'}}>\r\n                <h3>Yine bekleriz...</h3>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","C:\\proje\\react\\frontend\\menu-prime\\src\\repast\\RepastView.js",[],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":4,"column":10,"nodeType":"69","messageId":"70","endLine":4,"endColumn":14},{"ruleId":"67","severity":1,"message":"71","line":13,"column":21,"nodeType":"69","messageId":"70","endLine":13,"endColumn":29},{"ruleId":"67","severity":1,"message":"72","line":13,"column":30,"nodeType":"69","messageId":"70","endLine":13,"endColumn":38},{"ruleId":"67","severity":1,"message":"73","line":21,"column":9,"nodeType":"69","messageId":"70","endLine":21,"endColumn":17},{"ruleId":"67","severity":1,"message":"74","line":13,"column":12,"nodeType":"69","messageId":"70","endLine":13,"endColumn":18},{"ruleId":"67","severity":1,"message":"75","line":17,"column":12,"nodeType":"69","messageId":"70","endLine":17,"endColumn":22},{"ruleId":"67","severity":1,"message":"76","line":74,"column":28,"nodeType":"69","messageId":"70","endLine":74,"endColumn":32},{"ruleId":"67","severity":1,"message":"77","line":11,"column":12,"nodeType":"69","messageId":"70","endLine":11,"endColumn":17},{"ruleId":"67","severity":1,"message":"74","line":13,"column":12,"nodeType":"69","messageId":"70","endLine":13,"endColumn":18},{"ruleId":"78","severity":1,"message":"79","line":12,"column":8,"nodeType":"80","endLine":12,"endColumn":10,"suggestions":"81"},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'username' is assigned a value but never used.","'firmName' is assigned a value but never used.","'retValue' is defined but never used.","'status' is assigned a value but never used.","'errorFound' is assigned a value but never used.","'name' is assigned a value but never used.","'error' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatchUser'. Either include it or remove the dependency array.","ArrayExpression",["84"],"no-global-assign","no-unsafe-negation",{"desc":"85","fix":"86"},"Update the dependencies array to be: [dispatchUser]",{"range":"87","text":"88"},[384,386],"[dispatchUser]"]